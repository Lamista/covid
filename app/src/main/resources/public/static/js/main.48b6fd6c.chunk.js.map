{"version":3,"sources":["AppConfig.js","components/CountriesDropdown.jsx","components/PageTop.jsx","components/HomePage.jsx","components/NoMatch.jsx","components/LineChart.jsx","components/CountryPage.jsx","App.js","index.js"],"names":["baseUrl","CountriesDropdown","countries","handleSelect","className","type","id","data-toggle","aria-haspopup","aria-expanded","window","location","pathname","split","aria-labelledby","map","c","onClick","PageTop","HomePage","componentDidMount","Axios","get","then","res","setState","data","catch","err","console","log","e","preventDefault","countryName","target","innerHTML","props","history","push","countrySelected","state","chartData","this","Component","NoMatch","LineChart","labels","year_weeks","datasets","label","casesPerWeek","fill","backgroundColor","borderColor","yAxisID","deathsPerWeek","options","scales","yAxes","display","position","CountryPage","App","exact","path","component","document","title","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.48b6fd6c.chunk.js","sourcesContent":["// const baseUrl = process.env.PUBLIC_URL;\r\nconst baseUrl = 'http://localhost:8080/app';\r\n\r\nexport default baseUrl;","import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport '../styles/CountriesDropdown.css'\r\n\r\nconst CountriesDropdown = ({ countries, handleSelect }) => {\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                {window.location.pathname === \"/app\" ? \"All countries\" : (window.location.pathname).split(\"/\")[2]}\r\n            </button>\r\n            <div className=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                {countries.map((c) => {\r\n                    return (\r\n                        <button key={c} className=\"dropdown-item\" onClick={handleSelect}>{c}</button>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountriesDropdown;","import React from 'react';\r\nimport CountriesDropdown from './CountriesDropdown';\r\n\r\nconst PageTop = ({ countries, handleSelect }) => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-5\">COVID-19 statistics</h1>\r\n            <h5>Cases and deaths by country</h5>\r\n            <div className=\"row mt-5\">\r\n                <p className=\"col-6 text-right\">Select country: </p>\r\n                <div className=\"col-6 text-left\">\r\n                    <CountriesDropdown\r\n                        countries={countries}\r\n                        handleSelect={handleSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageTop;","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport baseUrl from '../AppConfig';\r\n// import LineChart from './LineChart';\r\nimport PageTop from './PageTop';\r\n\r\nclass HomePage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            countries: [],\r\n            chartData: {},\r\n            countrySelected: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios\r\n            .get(`${baseUrl}/api/data/countries`)\r\n            .then((res) => this.setState({ countries: res.data }))\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        e.preventDefault();\r\n        let countryName = e.target.innerHTML;\r\n        this.props.history.push(`/${countryName}`)\r\n        this.setState({ countrySelected: countryName })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <PageTop\r\n                    countries={this.state.countries}\r\n                    handleSelect={this.handleSelect}\r\n                />\r\n                {/* <div className=\"mt-5\">\r\n                    <LineChart\r\n                        countrySelected={this.state.countrySelected}\r\n                    />\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from 'react'\r\n\r\nconst NoMatch = (props) => {\r\n    const goApp = () => props.history.push('/');\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='m-5'>Route did not match\r\n            <button className='btn btn-primary ml-3' onClick={goApp}>Go Home</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoMatch;","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst LineChart = ({ chartData }) => {\r\n    const data = {\r\n        labels: chartData.year_weeks,\r\n        datasets: [\r\n            {\r\n                label: 'Cases/week',\r\n                data: chartData.casesPerWeek,\r\n                fill: false,\r\n                backgroundColor: 'rgb(54, 162, 235)',\r\n                borderColor: 'rgba(54, 162, 235, 0.2)',\r\n                yAxisID: 'y-axis-1',\r\n            },\r\n            {\r\n                label: 'Deaths/week',\r\n                data: chartData.deathsPerWeek,\r\n                fill: false,\r\n                backgroundColor: 'rgb(255, 99, 132)',\r\n                borderColor: 'rgba(255, 99, 132, 0.2)',\r\n                yAxisID: 'y-axis-1',\r\n            },\r\n        ],\r\n    }\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    display: true,\r\n                    position: 'left',\r\n                    id: 'y-axis-1',\r\n                },\r\n            ],\r\n        },\r\n    }\r\n    return (\r\n        <>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport baseUrl from '../AppConfig';\r\nimport LineChart from './LineChart';\r\nimport PageTop from './PageTop';\r\n\r\nclass CountryPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            countries: [],\r\n            chartData: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios\r\n            .get(`${baseUrl}/api/data/countries`)\r\n            .then((res) => this.setState({ countries: res.data }))\r\n            .catch((err) => console.log(err))\r\n\r\n        Axios\r\n            .get(`${baseUrl}/api/data/${(window.location.pathname).split(\"/\")[2]}`)\r\n            .then((res) => {\r\n                this.setState({ chartData: res.data })\r\n                console.log(res);\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleSelect = (e) => {\r\n        e.preventDefault();\r\n        let countryName = e.target.innerHTML;\r\n        Axios\r\n            .get(`${baseUrl}/api/data/${countryName}`)\r\n            .then((res) => {\r\n                this.setState({ chartData: res.data })\r\n            })\r\n            .catch((err) => console.log(err))\r\n        this.props.history.push(`/${countryName}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <PageTop\r\n                    countries={this.state.countries}\r\n                    handleSelect={this.handleSelect}\r\n                />\r\n                <div className=\"mt-5\">\r\n                    <LineChart\r\n                        chartData={this.state.chartData}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport './styles/App.css'\r\nimport HomePage from './components/HomePage';\r\nimport NoMatch from './components/NoMatch';\r\nimport CountryPage from './components/CountryPage';\r\n\r\nconst App = (props) => (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route path='/:country' component={CountryPage} />\r\n      <Route path='*' component={NoMatch} />\r\n      <Route component={NoMatch} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport '../src/styles/index.css';\r\n\r\ndocument.title = 'Covid-19 statistics';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}